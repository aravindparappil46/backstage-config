apiVersion: backstage.io/v1alpha1
kind: Component
metadata:
  name: {{cookiecutter.component_id | jsonify}}
  description: {{cookiecutter.description | jsonify}}
  tags:
    - domain-api
    - java11
  links:
    - url: https://github.com/swagger-api/swagger-petstore
      title: BitBucket Repo
      icon: github
    - url: https://github.com/OAI/OpenAPI-Specification/blob/master/examples/v3.0/petstore.yaml
      title: API Spec
      icon: code
  annotations:
    github.com/project-slug: {{cookiecutter.destination.owner + "/" + cookiecutter.destination.repo}}
    backstage.io/techdocs-ref: url:{{cookiecutter.destination.host + "/" + cookiecutter.destination.owner + "/" + cookiecutter.destination.repo}}
spec:
  type: openapi
  lifecycle: experimental
  owner: {{cookiecutter.owner | jsonify}}
  definition: |
    openapi: "3.0.0"
    info:
      version: 1.0.0
      title: Domain API Swagger
      license:
        name: MIT
    servers:
      - url: http://petstore.swagger.io/v1
    paths:
      /tails:
        get:
          summary: List all tails
          operationId: listTails
          tags:
            - tails
          parameters:
            - name: limit
              in: query
              description: How many items to return at one time (max 100)
              required: false
              schema:
                type: integer
                format: int32
          responses:
            '200':
              description: A paged array of tails
              headers:
                x-next:
                  description: A link to the next page of responses
                  schema:
                    type: string
              content:
                application/json:
                  schema:
                    $ref: "#/components/schemas/Tails"
            default:
              description: unexpected error
              content:
                application/json:
                  schema:
                    $ref: "#/components/schemas/Error"
        post:
          summary: Create a tail
          operationId: createTails
          tags:
            - tails
          responses:
            '201':
              description: Null response
            default:
              description: unexpected error
              content:
                application/json:
                  schema:
                    $ref: "#/components/schemas/Error"
      /tails/{tailId}:
        get:
          summary: Info for a specific tail
          operationId: showTailById
          tags:
            - tails
          parameters:
            - name: tailId
              in: path
              required: true
              description: The id of the tail to retrieve
              schema:
                type: string
          responses:
            '200':
              description: Expected response to a valid request
              content:
                application/json:
                  schema:
                    $ref: "#/components/schemas/Tail"
            default:
              description: unexpected error
              content:
                application/json:
                  schema:
                    $ref: "#/components/schemas/Error"
    components:
      schemas:
        Tail:
          type: object
          required:
            - id
            - number
            - customerAccount
          properties:
            id:
              type: integer
              format: int64
            number:
              type: string
            customerAccount:
              type: string
            tag:
              type: string
        Tails:
          type: array
          items:
            $ref: "#/components/schemas/Tail"
        Error:
          type: object
          required:
            - code
            - message
          properties:
            code:
              type: integer
              format: int32
            message:
              type: string